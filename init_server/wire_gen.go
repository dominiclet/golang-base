// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package initserver

import (
	session2 "github.com/dominiclet/golang-base/handler/session"
	user2 "github.com/dominiclet/golang-base/handler/user"
	"github.com/dominiclet/golang-base/init_server/config"
	"github.com/dominiclet/golang-base/init_server/env"
	"github.com/dominiclet/golang-base/lib/email"
	"github.com/dominiclet/golang-base/middleware"
	"github.com/dominiclet/golang-base/service/session"
	"github.com/dominiclet/golang-base/service/user"
)

// Injectors from wire.go:

func InitDeps() *RouterService {
	configConfig := config.InitConfig()
	db := InitGormDB(configConfig)
	envVars := env.InitEnvVars()
	emailService := email.InitEmailService(configConfig, envVars)
	userService := user.InitUserService(db, emailService)
	sessionService := session.InitSessionService(userService, db)
	middlewareMiddleware := middleware.InitMiddleware(sessionService)
	userHandler := user2.InitUserHandler(userService)
	sessionHandler := session2.InitSessionHandler(sessionService, configConfig, envVars)
	injector := &Injector{
		middleware:     middlewareMiddleware,
		userHandler:    userHandler,
		sessionHandler: sessionHandler,
	}
	routerService := InitRouterService(injector)
	return routerService
}
